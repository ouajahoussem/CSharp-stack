@model MyViewModel


<div class="d-flex justify-content-around text-capitalize">
    <h1> Hi @ViewBag.LoggedInUser.Name!</h1>
    <a asp-action="Logout" class="fs-4"> Logout </a>
</div>
<hr>


<div>
    @await Html.PartialAsync("_newPost", Model.newPost)
</div>



@foreach (Post i in Model.AllPosts)
{
    <div class="d-flex mt-5 justify-content-evenly col-6">
        <div class="gap-1 d-flex col-1">
            <a asp-action="ShowUser" asp-route-userId=@i.UserId class="text-capitalize fs-4">@i.Poster.Alias </a>
            <span class="fs-5 p-1">says: </span>
        </div>
        <div class="d-flex">
            <div class="card p-2" style="width: 18rem;">
                <div>
                    <p class="card-text">@i.Idea</p>
                </div>
            </div>
            <div>
                @if (i.UserId == ViewBag.LoggedInUser.UserId)
                {
                    <a asp-action="DeletePost" asp-route-userId="@ViewBag.LoggedInUser.UserId" asp-route-postId=@i.PostId
                        class="border border-danger rounded-circle" style="text-decoration: none; ">‚ùå</a>
                }

            </div>
        </div>
    </div>
    <div class="d-flex flex-row justify-content-center p-3 gap-3 fs-5 col-7">
        @if (@i.UserWhoLiked.Any(s => s.UserId == @Context.Session.GetInt32("UserId")))
        {
            <a asp-action="DislikePost" asp-route-userId="@ViewBag.LoggedInUser.UserId" asp-route-postId=@i.PostId>Dislike</a>
        }
        else
        {
            <a asp-action="LikePost" asp-route-userId="@ViewBag.LoggedInUser.UserId" asp-route-postId=@i.PostId>Like</a>
        }
        <a asp-action="ShowPost" asp-route-postId=@i.PostId>@i.UserWhoLiked.Count people</a>
        <span>like this.</span>
    </div>


}